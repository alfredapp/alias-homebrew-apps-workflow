<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>bundleid</key>
	<string>com.alfredapp.aliashomebrewapps</string>
	<key>connections</key>
	<dict>
		<key>26E2AE7C-9A24-4AD8-B0AB-152FFB18DFD3</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3160046E-E8C2-4F20-8987-53BFD7A1276D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>3160046E-E8C2-4F20-8987-53BFD7A1276D</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>557D0F59-9D64-4489-B21C-8CB4DFEF7FA7</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
		<key>97E477F9-94DB-4FC8-9D06-8017AA9E1E7A</key>
		<array>
			<dict>
				<key>destinationuid</key>
				<string>3160046E-E8C2-4F20-8987-53BFD7A1276D</string>
				<key>modifiers</key>
				<integer>0</integer>
				<key>modifiersubtext</key>
				<string></string>
				<key>vitoclose</key>
				<false/>
			</dict>
		</array>
	</dict>
	<key>createdby</key>
	<string>Vítor Galvão</string>
	<key>description</key>
	<string>Create shortcuts to Homebrew formula app bundles</string>
	<key>disabled</key>
	<false/>
	<key>name</key>
	<string>Alias Homebrew Apps</string>
	<key>objects</key>
	<array>
		<dict>
			<key>config</key>
			<dict>
				<key>argumenttype</key>
				<integer>2</integer>
				<key>keyword</key>
				<string>brewalias</string>
				<key>subtext</key>
				<string>Create shortcuts to Homebrew formula app bundles</string>
				<key>text</key>
				<string>Alias Homebrew Apps</string>
				<key>withspace</key>
				<false/>
			</dict>
			<key>type</key>
			<string>alfred.workflow.input.keyword</string>
			<key>uid</key>
			<string>26E2AE7C-9A24-4AD8-B0AB-152FFB18DFD3</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>0</integer>
				<key>script</key>
				<string># THESE VARIABLES MUST BE SET. SEE THE ONEUPDATER README FOR AN EXPLANATION OF EACH.
readonly remote_info_plist="https://raw.githubusercontent.com/alfredapp/alias-homebrew-apps-workflow/master/Workflow/info.plist"
readonly workflow_url="alfredapp/alias-homebrew-apps-workflow"
readonly download_type='github_release'
readonly frequency_check='4'

# FROM HERE ON, CODE SHOULD BE LEFT UNTOUCHED!
function abort {
  echo "${1}" &gt;&amp;2
  exit 1
}

function url_exists {
  curl --silent --location --output /dev/null --fail --range 0-0 "${1}"
}

function notification {
  local -r notificator="$(find . -type f -name 'notificator')"

  if [[ -f "${notificator}" &amp;&amp; "$(/usr/bin/file --brief --mime-type "${notificator}")" == 'text/x-shellscript' ]]; then
    "${notificator}" --message "${1}" --title "${alfred_workflow_name}" --subtitle 'A new version is available'
    return
  fi

  osascript -e "display notification \"${1}\" with title \"${alfred_workflow_name}\" subtitle \"A new version is available\""
}

# Local sanity checks
readonly local_info_plist='info.plist'
readonly local_version="$(/usr/libexec/PlistBuddy -c 'print version' "${local_info_plist}")"

[[ -n "${local_version}" ]] || abort 'You need to set a workflow version in the configuration sheet.'
[[ "${download_type}" =~ ^(direct|page|github_release)$ ]] || abort "'download_type' (${download_type}) needs to be one of 'direct', 'page', or 'github_release'."
[[ "${frequency_check}" =~ ^[0-9]+$ ]] || abort "'frequency_check' (${frequency_check}) needs to be a number."

# Check for updates
if [[ $(find "${local_info_plist}" -mtime +"${frequency_check}"d) ]]; then
  # Remote sanity check
  if ! url_exists "${remote_info_plist}"; then
    abort "'remote_info_plist' (${remote_info_plist}) appears to not be reachable."
  fi

  readonly tmp_file="$(mktemp)"
  curl --silent --location --output "${tmp_file}" "${remote_info_plist}"
  readonly remote_version="$(/usr/libexec/PlistBuddy -c 'print version' "${tmp_file}")"
  rm "${tmp_file}"

  if [[ "${local_version}" == "${remote_version}" ]]; then
    touch "${local_info_plist}" # Reset timer by touching local file
    exit 0
  fi

  if [[ "${download_type}" == 'page' ]]; then
    notification 'Opening download page…'
    open "${workflow_url}"
    exit 0
  fi

  readonly download_url="$(
    if [[ "${download_type}" == 'github_release' ]]; then
      osascript -l JavaScript -e 'function run(argv) { return JSON.parse(argv[0])["assets"].find(asset =&gt; asset["browser_download_url"].endsWith(".alfredworkflow"))["browser_download_url"] }' "$(curl --silent "https://api.github.com/repos/${workflow_url}/releases/latest")"
    else
      echo "${workflow_url}"
    fi
  )"

  if url_exists "${download_url}"; then
    notification 'Downloading and installing…'
    readonly download_name="$(basename "${download_url}")"
    curl --silent --location --output "${HOME}/Downloads/${download_name}" "${download_url}"
    open "${HOME}/Downloads/${download_name}"
  else
    abort "'workflow_url' (${download_url}) appears to not be reachable."
  fi
fi</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>0</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>557D0F59-9D64-4489-B21C-8CB4DFEF7FA7</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>concurrently</key>
				<false/>
				<key>escaping</key>
				<integer>102</integer>
				<key>script</key>
				<string># Helpers
function new_alias {
  local -r app="${1}"
  local -r dest_dir="${2}"

  /usr/bin/osascript -e '
    on run argv
      tell application "Finder" to make alias to POSIX file (item 1 of argv) at POSIX file (item 2 of argv)
    end run
  ' "${app}" "${dest_dir}"
}

function update_alias {
  local -r alias="${1}"
  local -r app="${2}"

  /usr/bin/osascript -e '
    on run argv
      tell application "Finder" to set original item of (POSIX file (item 1 of argv) as alias) to (POSIX file (item 2 of argv) as alias)
    end run
  ' "${alias}" "${app}"
}

# Main
export PATH="/opt/homebrew/bin:/usr/local/bin:${PATH}"

readonly apps_dir="${applications_dir/#\~/${HOME}}"

IFS=',' read -rA formulae_arr &lt; &lt;(tr -d ' ' &lt;&lt;&lt; "${formulae}")

for formula in "${formulae_arr[@]}"; do
  while IFS= read -r app; do
    app_dest="${apps_dir}/$(basename "${app}")"

    if [[ -e "${app_dest}" ]]; then
      if [[ "$(file --brief "${app_dest}")" != 'MacOS Alias file' ]]; then
        echo "${app_dest} is not an alias! Skipping…" &gt;&amp;2
        continue
      fi

      update_alias "${app_dest}" "${app}"
      continue
    fi

    new_alias "${app}" "${apps_dir}"
  done &lt; &lt;(find "$(brew --cellar)/${formula}" -type d -name '*app')
done

# Make sure Alfred shows aliases in Default Results
readonly prefs="${alfred_preferences}/preferences/features/defaultresults/prefs.plist"

# If aliases are already ignored, exit
if /usr/libexec/PlistBuddy -c 'Print :showUserDefined:' "${prefs}" | grep --quiet '^\s*com.apple.alias-file$'; then
  exit 0
fi

# Create array (and file) if it does not exist
if ! /usr/libexec/PlistBuddy -c 'Print :showUserDefined:' "${prefs}"; then
  /usr/libexec/PlistBuddy -c 'Add :showUserDefined array' "${prefs}"
fi

# Add key
/usr/libexec/PlistBuddy -c 'Add :showUserDefined: string "com.apple.alias-file"' "${prefs}"</string>
				<key>scriptargtype</key>
				<integer>1</integer>
				<key>scriptfile</key>
				<string></string>
				<key>type</key>
				<integer>5</integer>
			</dict>
			<key>type</key>
			<string>alfred.workflow.action.script</string>
			<key>uid</key>
			<string>3160046E-E8C2-4F20-8987-53BFD7A1276D</string>
			<key>version</key>
			<integer>2</integer>
		</dict>
		<dict>
			<key>config</key>
			<dict>
				<key>triggerid</key>
				<string>build</string>
			</dict>
			<key>type</key>
			<string>alfred.workflow.trigger.external</string>
			<key>uid</key>
			<string>97E477F9-94DB-4FC8-9D06-8017AA9E1E7A</string>
			<key>version</key>
			<integer>1</integer>
		</dict>
	</array>
	<key>readme</key>
	<string>Apps built via Homebrew formulae are nested deep in the `Cellar` and not indexed by Spotlight (and thus Alfred). This Workflow takes care of that.

Set up the `formulae` Workflow Environment Variable as a comma-separated list of formula names. Run `brewalias` and app bundles found under those will be aliased into your Applications directory, allowing them to be indexed and invoked like other apps.

![](https://user-images.githubusercontent.com/1699443/161145792-978069f8-d160-4a1e-9c85-29d09973a964.png)

Make `formulae` empty to create aliases for all app bundles under your Homebrew Cellar. This may add more than you want.

The `applications_dir` Workflow Environment Variable sets the directory to save the aliases to, like `/Applications` or `~/Applications`.

You can run the Workflow from a Terminal via the External Trigger. The simplest way is to define an alias in your shell’s startup files:

```
alias brewalias='/usr/bin/osascript -e "tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"build\" in workflow \"com.alfredapp.aliashomebrewapps\""'
```

Then executing `brewalias` in a Terminal will run the Workflow.</string>
	<key>uidata</key>
	<dict>
		<key>26E2AE7C-9A24-4AD8-B0AB-152FFB18DFD3</key>
		<dict>
			<key>xpos</key>
			<integer>55</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>3160046E-E8C2-4F20-8987-53BFD7A1276D</key>
		<dict>
			<key>xpos</key>
			<integer>275</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>557D0F59-9D64-4489-B21C-8CB4DFEF7FA7</key>
		<dict>
			<key>colorindex</key>
			<integer>12</integer>
			<key>note</key>
			<string>OneUpdater</string>
			<key>xpos</key>
			<integer>485</integer>
			<key>ypos</key>
			<integer>50</integer>
		</dict>
		<key>97E477F9-94DB-4FC8-9D06-8017AA9E1E7A</key>
		<dict>
			<key>xpos</key>
			<integer>55</integer>
			<key>ypos</key>
			<integer>195</integer>
		</dict>
	</dict>
	<key>variables</key>
	<dict>
		<key>applications_dir</key>
		<string>/Applications</string>
		<key>formulae</key>
		<string>macvim, neovim-qt</string>
	</dict>
	<key>version</key>
	<string>2022.1</string>
	<key>webaddress</key>
	<string>https://github.com/alfredapp/alias-homebrew-apps-workflow/</string>
</dict>
</plist>
